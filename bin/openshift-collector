#!/usr/bin/env ruby

lib = File.expand_path("../../lib", __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

STDOUT.sync = true

require "bundler/setup"
require "openshift/collector"
require "pry-byebug"

def parse_args
  require 'optimist'
  opts = Optimist::options do
    opt :source, "Inventory Source UID", :type => :string, :required => ENV["SOURCE_UID"].nil?, :default => ENV["SOURCE_UID"]
    opt :hostname, "Hostname of the OpenShift master node", :type => :string, :required => ENV["OPENSHIFT_HOSTNAME"].nil?, :default => ENV["OPENSHIFT_HOSTNAME"]
    opt :ingress_api, "Hostname of the ingress-api route", :type => :string, :default => ENV["INGRESS_API"] || "http://localhost:9292"
    opt :token, "Auth token to the OpenShift cluster", :type => :string, :required => ENV["OPENSHIFT_TOKEN"].nil?, :default => ENV["OPENSHIFT_TOKEN"]
  end

  opts
end

args = parse_args

ingress_api_uri = URI(args[:ingress_api])

TopologicalInventory::IngressApi::Client.configure.scheme = ingress_api_uri.scheme || "http"
TopologicalInventory::IngressApi::Client.configure.host   = "#{ingress_api_uri.host}:#{ingress_api_uri.port}"

collector = Openshift::Collector.new(args[:source], args[:hostname], args[:token])
Thread.new { collector.collect! }

loop { sleep }
